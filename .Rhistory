frofrom scipy import stats
frofrom scipy import stats
fro scipy import stats
from scipy import stats
pip install scipy
import numpy as np
from scipy import stats
from scipy import stats
from scipy import stats
setwd("Bachelor/Paket_BHT/Biotech/")
l
library(devtools)
load_all()
PAGE.gen(1, 1, 1)
PAGE.gen(1, 1, 1)
load_all()
PAGE.gen(1, 1, 1)
View(PAGE.gen)
load_all()
load_all()
load_all()
LFS_Marker <- c(11.94, 17.86, 29.21, 41.37, 60.11, 78.91, 107.7)
Weight_Marker <- c(212, 118, 66, 43, 29, 20,14)
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, plot.PAGE = T)
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
RF <- marker.d/max(LFS_Marker)
RF <- LFS_Marker/max(LFS_Marker)
plot.PAGE <- ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()+
geom_smooth()
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()+
geom_smooth(method = "lm")
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()+
geom_smooth(method = "lm")+
theme_dark()
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()+
geom_smooth(method = "lm")+
theme_minimal()
ggplot2::ggplot(mapping = ggplot2::aes(y = log10(Weight_Marker) ,x = RF))+
ggplot2::geom_point()+
geom_smooth(method = "lm")+
theme_minimal()+
ylab("log markerweight")
load_all()
LFS_Marker <- c(11.94, 17.86, 29.21, 41.37, 60.11, 78.91, 107.7)
Weight_Marker <- c(212, 118, 66, 43, 29, 20,14)
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
load_all()
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
load_all()
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
load_all()
PAGE.gen(marker.w = Weight_Marker, marker.d = LFS_Marker, unknown.d = LFS_Marker ,plot.PAGE = T)
